{"version":3,"sources":["hooks/useContract.ts","hooks/useWeb3.ts","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","views/Collectibles/components/InfoRow.tsx","views/Collectibles/components/TransferNftModal.tsx","views/Collectibles/components/ClaimNftModal.tsx","views/Collectibles/components/NftCard/Preview.tsx","views/Collectibles/components/NftCard/index.tsx","views/Collectibles/components/NftGrid.tsx","views/Collectibles/components/NftCard/BunnySpecialCard.tsx","views/Collectibles/components/NftCard/EasterNftCard.tsx","views/Collectibles/components/NftList.tsx","views/Collectibles/index.tsx"],"names":["useIfoV1Contract","address","web3","useWeb3","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useLPStakingContract","getLpStakingContract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useChainlinkOracleContract","getChainlinkOracleContract","library","useWeb3React","refEth","useRef","useState","Web3","web3NoAccount","setweb3","useEffect","current","baseForOwn","require","baseEach","createBaseEach","module","exports","baseFor","keys","object","iteratee","isArrayLike","eachFunc","fromRight","collection","length","index","iterable","Object","baseOrderBy","isArray","iteratees","orders","guard","undefined","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","value","result","key","other","Array","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","InfoRow","styled","div","Value","Text","ModalContent","Actions","Label","label","theme","colors","text","TransferNftModal","nft","tokenIds","onSuccess","onDismiss","isLoading","setIsLoading","setValue","error","setError","t","useTranslation","account","contract","getAddressByType","type","toastSuccess","useToast","handleConfirm","a","utils","isAddress","methods","transferFrom","send","from","on","console","title","color","mb","nftName","name","htmlFor","placeholder","onChange","evt","inputValue","target","isWarning","disabled","width","variant","onClick","ClaimNftModal","onClaim","isConfirming","setIsConfirming","toastError","once","alignItems","justifyContent","bold","endIcon","spin","Container","card","StyledImage","img","StyledVideo","video","Preview","isOwned","images","previewImageSrc","lg","videoComponent","autoPlay","controls","loop","muted","poster","src","webm","mp4","href","ipfs","rel","previewImage","alt","Header","DetailsButton","Button","attrs","InfoBlock","NftCard","canClaim","refresh","isOpen","setIsOpen","profile","identifier","description","walletOwnsNft","Icon","ChevronUpIcon","ChevronDownIcon","handleClick","handleSuccess","useModal","onPresentTransferModal","onPresentClaimModal","isActive","outline","mt","p","as","style","textAlign","NftGrid","mediaQueries","sm","md","BunnySpecialCard","props","isClaimable","setIsClaimable","bunnySpecialContract","variationId","canClaimSingle","call","fetchClaimStatus","mintNFT","teamNftMap","EasterNftCard","team","easterNftContract","nftComponents","hiccup","bullish","NftList","useGetCollectibles","dispatch","useAppDispatch","handleRefresh","fetchWalletNfts","orderBy","nfts","map","Card","StyledHero","textSubtle","Collectibles","Page","scale"],"mappings":"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","file":"static/js/13.212d917d.chunk.js","sourcesContent":["import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getLpStakingContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useLPStakingContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLpStakingContract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport web3NoAccount from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : web3NoAccount)\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import styled from 'styled-components'\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default InfoRow\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Input, Modal, Text } from '@pancakeswap/uikit'\nimport { getAddressByType } from 'utils/collectibles'\nimport { Nft } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC721 } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const contract = useERC721(getAddressByType(nft.type))\n  const { toastSuccess } = useToast()\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(t('Please enter a valid wallet address'))\n      } else {\n        await contract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n            toastSuccess(t('NFT successfully transferred!'))\n          })\n          .on('error', () => {\n            console.error(error)\n            setError(t('Unable to transfer NFT'))\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={t('Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{t('Transferring')}:</Text>\n          <Value>{t('1x %nftName% NFT', { nftName: nft.name })}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{t('Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={t('Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {t('Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { PromiEvent } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, InjectedModalProps, Modal, Text, Flex, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\n\ninterface ClaimNftModalProps extends InjectedModalProps {\n  nft: Nft\n  onSuccess: () => void\n  onClaim: () => PromiEvent<Contract>\n}\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onClaim, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleConfirm = async () => {\n    onClaim()\n      .once('sending', () => {\n        setIsConfirming(true)\n      })\n      .once('receipt', () => {\n        toastSuccess(t('Successfully claimed!'))\n        onDismiss()\n        onSuccess()\n      })\n      .once('error', (error) => {\n        console.error('Unable to claim NFT', error)\n        toastError(t('Error'), t('Unable to claim NFT, please try again.'))\n        setIsConfirming(false)\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Collectible')} onDismiss={onDismiss}>\n      <ModalContent>\n        <Flex alignItems=\"center\" mb=\"8px\" justifyContent=\"space-between\">\n          <Text>{t('You will receive')}:</Text>\n          <Text bold>{t('1x %nftName% Collectible', { nftName: nft.name })}</Text>\n        </Flex>\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          onClick={handleConfirm}\n          disabled={!account}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n        >\n          {t('Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Nft } from 'config/constants/types'\n\ninterface PreviewProps {\n  nft: Nft\n  isOwned?: boolean\n}\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.card};\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 32px 32px 0 0;\n`\n\nconst StyledVideo = styled.video`\n  height: 100%;\n  width: 100%;\n`\n\nconst Preview: React.FC<PreviewProps> = ({ nft, isOwned = false }) => {\n  const { images, name, video } = nft\n  const previewImageSrc = `/images/nfts/${images.lg}`\n\n  if (video) {\n    const videoComponent = (\n      <StyledVideo autoPlay controls={false} loop muted poster={previewImageSrc}>\n        <source src={video.webm} type=\"video/webm\" />\n        <source src={video.mp4} type=\"video/mp4\" />\n      </StyledVideo>\n    )\n\n    return isOwned ? (\n      <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n        {videoComponent}\n      </a>\n    ) : (\n      videoComponent\n    )\n  }\n\n  const previewImage = <StyledImage src={previewImageSrc} alt={name} />\n\n  return (\n    <Container>\n      {isOwned ? (\n        <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n          {previewImage}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Preview\n","import React, { useState } from 'react'\nimport { PromiEvent } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\nimport InfoRow from '../InfoRow'\nimport TransferNftModal from '../TransferNftModal'\nimport ClaimNftModal from '../ClaimNftModal'\nimport Preview from './Preview'\n\nexport interface NftCardProps {\n  nft: Nft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onClaim?: () => PromiEvent<Contract>\n  refresh: () => void\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const { profile } = useProfile()\n  const { identifier, name, description } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleSuccess = () => {\n    refresh()\n  }\n\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  )\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} onClaim={onClaim} />)\n\n  return (\n    <Card isActive={walletOwnsNft}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>{name}</Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {t('In Wallet')}\n            </Tag>\n          )}\n          {profile?.nft?.identifier === identifier && (\n            <Tag outline variant=\"success\">\n              {t('Profile Pic')}\n            </Tag>\n          )}\n        </Header>\n        {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {t('Claim this NFT')}\n          </Button>\n        )}\n        {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {t('Transfer')}\n          </Button>\n        )}\n      </CardBody>\n      <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {t('Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\n              {t(description)}\n            </Text>\n          </InfoBlock>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default NftCard\n","import styled from 'styled-components'\n\nconst NftGrid = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n\nexport default NftGrid\n","import React, { useEffect, useState } from 'react'\nimport { PromiEvent } from 'web3-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useBunnySpecialContract } from 'hooks/useContract'\nimport NftCard, { NftCardProps } from './index'\n\nconst BunnySpecialCard: React.FC<NftCardProps> = ({ nft, ...props }) => {\n  const [isClaimable, setIsClaimable] = useState(false)\n  const { account } = useWeb3React()\n  const bunnySpecialContract = useBunnySpecialContract()\n  const { variationId } = nft\n\n  const handleClaim = (): PromiEvent<Contract> => {\n    return bunnySpecialContract.methods.mintNFT(variationId).send({ from: account })\n  }\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const canClaimSingle = await bunnySpecialContract.methods.canClaimSingle(account, variationId).call()\n      setIsClaimable(canClaimSingle)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, variationId, bunnySpecialContract, setIsClaimable])\n\n  return <NftCard nft={nft} {...props} canClaim={isClaimable} onClaim={handleClaim} />\n}\n\nexport default BunnySpecialCard\n","import React, { useEffect, useState } from 'react'\nimport { PromiEvent } from 'web3-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useProfile } from 'state/hooks'\nimport { useEasterNftContract } from 'hooks/useContract'\nimport NftCard, { NftCardProps } from './index'\n\n/**\n * A map of NFT bunny Ids to Team ids\n * [identifier]: teamId\n */\nexport const teamNftMap = {\n  'easter-storm': 1,\n  'easter-flipper': 2,\n  'easter-caker': 3,\n}\n\nconst EasterNftCard: React.FC<NftCardProps> = ({ nft, ...props }) => {\n  const [isClaimable, setIsClaimable] = useState(false)\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const { identifier } = nft\n  const { team } = profile ?? {}\n  const easterNftContract = useEasterNftContract()\n\n  const handleClaim = (): PromiEvent<Contract> => {\n    return easterNftContract.methods.mintNFT().send({ from: account })\n  }\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const canClaim = await easterNftContract.methods.canClaim(account).call()\n\n      // Wallet can claim if it is claimable and the nft being displayed is mapped to the wallet's team\n      setIsClaimable(canClaim ? team.id === teamNftMap[identifier] : false)\n    }\n\n    if (account && team) {\n      fetchClaimStatus()\n    }\n  }, [account, identifier, team, easterNftContract, setIsClaimable])\n\n  return <NftCard nft={nft} {...props} canClaim={isClaimable} onClaim={handleClaim} />\n}\n\nexport default EasterNftCard\n","import React from 'react'\nimport orderBy from 'lodash/orderBy'\nimport { useWeb3React } from '@web3-react/core'\nimport nfts from 'config/constants/nfts'\nimport { useAppDispatch } from 'state'\nimport { fetchWalletNfts } from 'state/collectibles'\nimport { useGetCollectibles } from 'state/hooks'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\nimport BunnySpecialCard from './NftCard/BunnySpecialCard'\nimport EasterNftCard from './NftCard/EasterNftCard'\n\n/**\n * A map of bunnyIds to special campaigns (NFT distribution)\n * Each NftCard is responsible for checking it's own claim status\n *\n */\nconst nftComponents = {\n  hiccup: BunnySpecialCard,\n  bullish: BunnySpecialCard,\n  'easter-storm': EasterNftCard,\n  'easter-flipper': EasterNftCard,\n  'easter-caker': EasterNftCard,\n}\n\nconst NftList = () => {\n  const { tokenIds } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleRefresh = () => {\n    dispatch(fetchWalletNfts(account))\n  }\n\n  return (\n    <NftGrid>\n      {orderBy(nfts, 'sortOrder').map((nft) => {\n        const Card = nftComponents[nft.identifier] ?? NftCard\n\n        return (\n          <div key={nft.name}>\n            <Card nft={nft} tokenIds={tokenIds[nft.identifier]} refresh={handleRefresh} />\n          </div>\n        )\n      })}\n    </NftGrid>\n  )\n}\n\nexport default NftList\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/layout/Page'\nimport NftList from './components/NftList'\n\nconst StyledHero = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Page>\n      <StyledHero>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Pancake Collectibles')}\n        </Heading>\n      </StyledHero>\n      <NftList />\n    </Page>\n  )\n}\n\nexport default Collectibles\n"],"sourceRoot":""}