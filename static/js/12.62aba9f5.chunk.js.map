{"version":3,"sources":["hooks/useContract.ts","hooks/useWeb3.ts","utils/bscscan.ts","components/UnlockButton.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","hooks/useTokenBalance.ts","hooks/usePersistState.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["useIfoV1Contract","address","web3","useWeb3","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useLPStakingContract","getLpStakingContract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useChainlinkOracleContract","getChainlinkOracleContract","library","useWeb3React","refEth","useRef","useState","Web3","web3NoAccount","setweb3","useEffect","current","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","getEthScanAddressUrl","BASE_ETH_SCAN_URL","UnlockButton","props","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","fullWidth","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","useCallback","value","ref","FetchStatus","useTokenAllowance","tokenAddress","allowedAddress","NOT_FETCHED","SUCCESS","FAILED","balance","BIG_ZERO","fetchStatus","balanceState","setBalanceState","account","fastRefresh","useRefresh","a","contract","methods","allowance","call","res","BigNumber","console","error","prev","fetchBalance","useGetBnbBalance","setBalance","eth","getBalance","walletBalance","refresh","useTokenBalance","balanceOf","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","localStorage","getItem","JSON","parse","setValue","setItem","stringify","ButtonArrangement","StyledApproveConfirmButtonRow","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","buttonArrangement","ROW","disabled","endIcon","undefined","isLoading","justifyContent","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onRequiresApproval","onSuccess","noop","onApproveSuccess","useReducer","dispatch","handlePreApprove","toastError","useToast","then","result","isApproved","isConfirmed","handleApprove","on","handleConfirm","HeaderWrapper","colors","textSubtle","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","nft","images","isActive","src","team","alt","name","ComingSoon","children","flexDirection","alignItems","p","height","as","scale","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","totalCost","action","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","canMint","fetchData","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","steps","Header","useContext","mb","map","translationKey","index","WalletNotConnected","useHasCakeBalance","minimumBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","label","Body","Children","StyledBackgroundImage","SelectionCard","isChecked","image","onChange","checked","e","target","style","flex","NextStepButton","useProfileCreation","nfts","nftList","filter","includes","identifier","minimumCakeBalanceToMint","Mint","variationId","setVariationId","cakeContract","hasMinimumCakeRequired","options","response","currentAllowance","approve","toJSON","send","from","mintNFT","num","Number","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetCollectibles","nftsInWallet","tokenIds","length","to","marginLeft","walletNft","firstTokenId","getAddressByType","parseInt","getPancakeProfileAddress","once","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","values","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useAppDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","data","bnbSign","signature","personal","sign","utils","utf8ToHex","method","headers","body","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","prevRefresh","claimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","multicallv2","profileABI","toString","fetchCosts","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","key","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usernameVisibilityToggled","setUsernameVisibility","VisibilityOff","VisibilityOn","replace","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/12.62aba9f5.chunk.js","sourcesContent":["import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getLpStakingContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useLPStakingContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLpStakingContract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport web3NoAccount from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : web3NoAccount)\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import { BASE_BSC_SCAN_URL, BASE_ETH_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n\n// Etherscan\n\nexport const getEthScanAddressUrl = (address: string) => {\n  return `${BASE_ETH_SCAN_URL}/address/${address}`\n}\n\nexport const getEthScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_ETH_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getEthScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_ETH_SCAN_URL}/block/${block}`\n}\n\nexport const getEthScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_ETH_SCAN_URL}/block/countdown/${block}`\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@metagg/mgg-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props} fullWidth>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTokenAllowance = (tokenAddress: string, allowedAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.allowance(account, allowedAddress).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, allowedAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n}) => {\n  const { t } = useTranslation()\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Approving') : t('Approve')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : t('Confirm')}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : t('Confirm')}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Approving') : t('Approve')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n  onApproveSuccess?: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n          onApproveSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError(t('An error occurred approving transaction'))\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError(t('An error occurred confirming transaction'))\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : // web3.utils.utf8ToHex(\"...\") will not be called here on username if hex like string\n          // https://github.com/ChainSafe/web3.js/blob/5d027191c5cb7ffbcd44083528bdab19b4e14744/packages/web3-core-helpers/src/formatters.js#L225\n          // Last param is the password, and is null to request a signature in the wallet\n          await web3.eth.personal.sign(web3.utils.utf8ToHex(userName), account, null)\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n          const currentAllowance = new BigNumber(response)\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.methods\n          .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n          .send({ from: account })\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.methods.mintNFT(variationId).send({ from: account })\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/hooks'\nimport useToast from 'hooks/useToast'\nimport { useERC721 } from 'hooks/useContract'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n  const { t } = useTranslation()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const contract = useERC721(selectedNft.nftAddress)\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n\n  const handleApprove = () => {\n    contract.methods\n      .approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      .send({ from: account })\n      .once('sending', () => {\n        setIsApproving(true)\n      })\n      .once('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .once('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {t('Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n          const currentAllowance = new BigNumber(response)\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n      },\n      onConfirm: () => {\n        return profileContract.methods\n          .createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n          .send({ from: account })\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Success!'))\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError(t('Error'), error?.message)\n      })\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from './useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\n          profileABI,\n          calls,\n        )\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Paused!'))\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles, useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC721, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const contract = useERC721(selectedNft.nftAddress)\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        return contract.methods.approve(getPancakeProfileAddress(), selectedNft.tokenId).send({ from: account })\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.methods\n            .reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n            .send({ from: account })\n        }\n\n        return profileContract.methods\n          .updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n          .send({ from: account })\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Approve CAKE',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {t('You’ve got a gift to claim!')}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(key, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess(t('Points Collected!'))\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\n        {t('Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n  VisibilityOn,\n  VisibilityOff,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\n    localStorageKey: 'username_visibility_toggled',\n  })\n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  const toggleUsernameVisibility = () => {\n    setUsernameVisibility(!usernameVisibilityToggled)\n  }\n\n  const { username, team, isActive, points } = profile\n\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Flex alignItems=\"center\">\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={getBscScanAddressUrl(account)} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}